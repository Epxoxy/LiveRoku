<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:LiveRoku"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:LiveRoku.UI.converters"
    xmlns:controls="clr-namespace:LiveRoku.UI.controls"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <sys:Double x:Key="ScrollBar.Compact.Length">3</sys:Double>
    <!--Colors-->
    <Color x:Key="Common.CA.Color" A="255" R="202" G="202" B="202"/>
    <Color x:Key="Common.E5.Color" A="255" R="229" G="229" B="229"/>
    <Color x:Key="Common.F83.Color" A="255" R="131" G="131" B="131"/>
    <Color x:Key="DefButton.Disabled.Border.Color" A="255" R="173" G="178" B="181"/>
    <Color x:Key="Common.Blue" A="255" R="51" G="153" B="255" />
    <Color x:Key="Common.Blue.40" A="150" R="51" G="153" B="255" />
    <Color x:Key="gs0" A="115" R="120" G="120" B="120" />
    <Color x:Key="gs1" A="0" R="120" G="120" B="120" />
    <Color x:Key="Thumb.Compact.Color" A="255" R="140" G="140" B="140"/>
    <Color x:Key="Thumb.MouseOver.Color" A="255" R="140" G="140" B="140"/>
    <Color x:Key="Thumb.Static.Color" A="255" R="186" G="186" B="186"/>
    <Color x:Key="Common.F5.Color" A="255" R="245" G="245" B="245"/>
    <Color x:Key="Common.F7A.Color" A="255" R="122" G="122" B="122"/>
    <Color x:Key="Common.All9.Color" A="255" R="153" G="153" B="153"/>
    <Color x:Key="DefButton.Static.Border.Color" A="255" R="112" G="112" B="112"/>
    <!--Brushes-->
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="LightGray"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="SkyBlue"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#f4f4f4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource DefButton.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource Common.F83.Color}"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="{StaticResource DefButton.Static.Border.Color}"/>
    <SolidColorBrush x:Key="WindowsTenButton.MouseOver.Brush"  Color="{StaticResource Common.F7A.Color}"/>
    <SolidColorBrush x:Key="NormalButton.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Background" Color="#f4f4f4"/>
    <SolidColorBrush x:Key="CheckBox.Checked.Fill" Color="SkyBlue"/>
    <SolidColorBrush x:Key="CheckBox.Unchecked.Fill" Color="#747474"/>
    <SolidColorBrush x:Key="Common.F5.Brush" Color="#f5f5f5"/>
    <SolidColorBrush x:Key="Thumb.Static.Background" Color="{StaticResource Thumb.Static.Color}"/>
    <GradientStopCollection x:Key="ShadowGSC01">
        <GradientStop Color="{StaticResource gs1}" Offset="0" />
        <GradientStop Color="{StaticResource gs0}" Offset="1" />
    </GradientStopCollection>
    <LinearGradientBrush x:Key="HorizontalShadowToLeft" StartPoint="0,0" EndPoint="1,0" GradientStops="{StaticResource ShadowGSC01}" />
    <LinearGradientBrush x:Key="HorizontalShadowToRight" StartPoint="1,0" EndPoint="0,0" GradientStops="{StaticResource ShadowGSC01}" />
    <LinearGradientBrush x:Key="VerticalShadowToBottom" StartPoint="0,1" EndPoint="0,0" GradientStops="{StaticResource ShadowGSC01}" />
    <LinearGradientBrush x:Key="VerticalShadowToUp" StartPoint="0,0" EndPoint="0,1" GradientStops="{StaticResource ShadowGSC01}" />
    <!--Converters-->
    <converters:MathMultipleConverter x:Key="MathMlpMultipleConverter" />
    <DataTemplate x:Key="BackArrow">
        <Path Data="M15,0 L5,10 15,20 M5,10 L30,10" Stroke="Black" StrokeThickness="1.2" Stretch="Uniform" Height="15" Width="25">
            <Path.CacheMode>
                <BitmapCache SnapsToDevicePixels="True" />
            </Path.CacheMode>
        </Path>
    </DataTemplate>

    <!--Templates-->
    <ControlTemplate x:Key="ShadowControl" TargetType="ContentControl">
        <Grid>
            <Border BorderBrush="Transparent" BorderThickness="1">
                <theme:SystemDropShadowChrome Color="#21000000" Margin="-9,-8,0,-1">
                    <theme:SystemDropShadowChrome.CacheMode>
                        <BitmapCache SnapsToDevicePixels="True" />
                    </theme:SystemDropShadowChrome.CacheMode>
                </theme:SystemDropShadowChrome>
            </Border>
            <Grid Background="White">
                <ContentPresenter />
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="BtnLiteTemplate" TargetType="ButtonBase">
        <Border Padding="{TemplateBinding Padding}">
            <ContentPresenter />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalArrange" TargetType="HeaderedContentControl">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ContentControl Content="{TemplateBinding Header}" IsTabStop="False"/>
            <ContentPresenter Grid.Column="1"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="DeleteButtonTemplateKey" TargetType="{x:Type Button}">
        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <Path x:Name="path" Data="M 0,0 L1,1 M 1,0 L 0,1 " Stroke="DimGray" Height="10" Width="10" Stretch="Fill" Margin="2"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" Value="Red" TargetName="path" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--Default styles-->
    <!--#region Control default styles-->

    <Style TargetType="{x:Type controls:DelayFitSizePane}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DelayFitSizePane}">
                    <Canvas x:Name="PART_WRAPPER">
                        <ContentPresenter x:Name="PART_CONTENT" ContentSource="{TemplateBinding Content}"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:ExpendEx}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExpendEx}">
                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel.Height>
                            <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                <Binding ElementName="PART_Content" Path="ActualHeight"/>
                                <Binding ElementName="PART_Content" Path="Opacity"/>
                            </MultiBinding>
                        </StackPanel.Height>
                        <ContentPresenter x:Name="PART_Content" Focusable="False" Opacity="0"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


    <!--Share styles-->
    <!--#region ScrollViewer style-->

    <!--#region RepeatButton-->

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <!--<Setter Property="Opacity" Value="0"/>-->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ScrollBarButton-->

    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#E4E4E4"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DCDCDC"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ScrollBar.Static.Glyph}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>-->
                            <Setter Property="Foreground" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="{StaticResource Thumb.Static.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" 
                                       Fill="{TemplateBinding Background}" 
                                       SnapsToDevicePixels="True" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.MouseOver.Color}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.Static.Color}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.MouseOver.Color}" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CompactableScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0,0"/>
        <Setter Property="Background" Value="{StaticResource Common.F5.Brush}" />
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="true" Background="Transparent">
                        <Grid.Resources>
                            <Visibility x:Key="Visibility.Visible">Visible</Visibility>
                            <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
                            <Storyboard x:Key="toNormal">
                                <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="2,0"  Duration="00:00:00"/>
                                <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width"
                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                            </Storyboard>
                            <Storyboard x:Key="toCompact" BeginTime="00:00:03">
                                <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="2,0" Duration="00:00:00"/>
                                <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width"
                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00.20"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                            </Storyboard>
                            <Storyboard x:Key="delayMouseOver" BeginTime="00:00:00.10">
                                <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>
                                <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width" Duration="00:00:00.10"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bg" Duration="00:00:00.10"/>
                            </Storyboard>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" To="Normal" Storyboard="{StaticResource toCompact}"/>
                                    <VisualTransition From="Normal" To="MouseOver" Storyboard="{StaticResource delayMouseOver}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" Storyboard="{StaticResource toNormal}"/>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="bar" Width="{TemplateBinding Width}" HorizontalAlignment="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton"
                                                  Command="{x:Static ScrollBar.LineUpCommand}" 
                                                  IsEnabled="{TemplateBinding IsMouseOver}" 
                                                  Style="{StaticResource ScrollBarLineButtonStyle}">
                                <Path Data="M0,3 L0,3 3,0 6,3" Stroke="Black" />
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" 
                                                          Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                          Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                            <!--<Border x:Name="PART_LineDownButton"></Border>-->
                            <RepeatButton x:Name="PART_LineDownButton" 
                                                  Command="{x:Static ScrollBar.LineDownCommand}" 
                                                  IsEnabled="{TemplateBinding IsMouseOver}" 
                                                  Grid.Row="2" Style="{StaticResource ScrollBarLineButtonStyle}">
                                <Path Data="M0,0 L0,0 3,3 6,0" Stroke="Black" />
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true" Background="Transparent">
                                <Grid.Resources>
                                    <Visibility x:Key="Visibility.Visible">Visible</Visibility>
                                    <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
                                    <Storyboard x:Key="toNormal">
                                        <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="0,2" Duration="00:00:00"/>
                                        <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height"
                                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                    </Storyboard>
                                    <Storyboard x:Key="toCompact" BeginTime="00:00:03">
                                        <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="0,2" Duration="00:00:00"/>
                                        <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height"
                                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00.20"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                    </Storyboard>
                                    <Storyboard x:Key="delayMouseOver" BeginTime="00:00:00.10">
                                        <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>
                                        <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height" Duration="00:00:00.10"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" Duration="00:00:00.10"/>
                                    </Storyboard>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="MouseOver" To="Normal" Storyboard="{StaticResource toCompact}"/>
                                            <VisualTransition From="Normal" To="MouseOver" Storyboard="{StaticResource delayMouseOver}"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" Storyboard="{StaticResource toNormal}"/>
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="bar" VerticalAlignment="Bottom" Height="{TemplateBinding Height}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" 
                                                          Command="{x:Static ScrollBar.LineLeftCommand}" 
                                                          IsEnabled="{TemplateBinding IsMouseOver}" 
                                                          Style="{StaticResource ScrollBarLineButtonStyle}">
                                        <Path Data="M3,0 L3,0 0,3 3,6" Stroke="Black" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton x:Name="DecreaseBtn" Command="{x:Static ScrollBar.PageLeftCommand}" 
                                                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton x:Name="IncreaseBtn" Command="{x:Static ScrollBar.PageRightCommand}" 
                                                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" 
                                                          Command="{x:Static ScrollBar.LineRightCommand}" 
                                                          IsEnabled="{TemplateBinding IsMouseOver}" 
                                                          Grid.Column="2" 
                                                          Style="{StaticResource ScrollBarLineButtonStyle}">
                                        <Path Data="M0,0 L0,0 3,3 0,6" Stroke="Black" />
                                    </RepeatButton>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BarCompactableScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="controls:ScrollViewerAttach.HorizontalBarLength" Value="10" />
        <Setter Property="controls:ScrollViewerAttach.VerticalBarLength" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DelayHideVerticalBar" Storyboard.TargetName="PART_VerticalScrollBar">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ViewVerticalBar" Storyboard.TargetName="PART_VerticalScrollBar">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DelayHideHorizontalBar" Storyboard.TargetName="PART_HorizontalScrollBar">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ViewHorizontalBar" Storyboard.TargetName="PART_HorizontalScrollBar">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Margin="{TemplateBinding Margin}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Column="0" Grid.Row="0"
                                                Grid.ColumnSpan="2" Grid.RowSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" 
                                                CanVerticallyScroll="False" Margin="{TemplateBinding Padding}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1" Grid.RowSpan="2"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   BorderThickness="0" Cursor="Arrow"
                                   HorizontalAlignment="Right"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Width="{TemplateBinding controls:ScrollViewerAttach.VerticalBarLength}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Style="{StaticResource CompactableScrollBarStyle}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1" Grid.ColumnSpan="2"
                                   Orientation="Horizontal"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   BorderThickness="0" Cursor="Arrow"
                                   Height="{TemplateBinding controls:ScrollViewerAttach.HorizontalBarLength}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   VerticalAlignment="Bottom"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Style="{StaticResource CompactableScrollBarStyle}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                                <Condition Property="IsMouseOver" SourceName="PART_HorizontalScrollBar" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Grid.RowSpan" TargetName="PART_VerticalScrollBar" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                                <Condition Property="IsMouseOver" SourceName="PART_VerticalScrollBar" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_HorizontalScrollBar" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="hidev" Storyboard="{StaticResource DelayHideVerticalBar}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="hidev"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="viewv" Storyboard="{StaticResource ViewVerticalBar}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="viewv"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="hideh" Storyboard="{StaticResource DelayHideHorizontalBar}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="hideh"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="viewh" Storyboard="{StaticResource ViewHorizontalBar}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="viewh"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <Style x:Key="PlaceHolderTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="controls:PlaceHolder.Content" Value="Enter here" />
        <Setter Property="controls:PlaceHolder.Brush" Value="DarkGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
                        <ContentControl x:Name="PlaceHolder" Content="{TemplateBinding controls:PlaceHolder.Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding controls:PlaceHolder.Brush}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" />
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="PlaceHolder" Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="PART_Path" To="-90" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="PART_Path" To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Path x:Name="PART_Path" Grid.Column="1" Data="M5,0 L15,10 5,20" Stroke="Black" Stretch="Uniform" Height="15" Width="15"
                                      RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="PART_Path" To="90" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="PART_Path" To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Path x:Name="PART_Path" Grid.Column="1" Data="M5,0 L15,10 5,20" Stroke="Black" Stretch="Uniform" Height="15" Width="15"
                                      RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentToGrayButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource Common.E5.Color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" >
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource Common.CA.Color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Common.F83.Color}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlueButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#c83399ff" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="3">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource Common.Blue}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" >
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource Common.Blue.40}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Common.F83.Color}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleAnimateExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Expanded">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                              Background="{TemplateBinding Background}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top" 
                                          Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" 
                                          FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="Center"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"/>
                            <Border Name="ExpandSite" DockPanel.Dock="Bottom">
                                <StackPanel Name="ContentPanel"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <StackPanel.Height>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualHeight"/>
                                            <Binding ElementName="PART_Content" Path="Opacity"/>
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <StackPanel.Width>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualWidth"/>
                                            <Binding ElementName="PART_Content" Path="Opacity"/>
                                        </MultiBinding>
                                    </StackPanel.Width>
                                    <ContentPresenter Name="PART_Content" Focusable="False"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical"/>
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#region ********** Animation CheckBox Style ************ -->
    <Style x:Key="AnimatedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" Margin="{TemplateBinding Padding}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="1"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="8" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="12" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="40" Duration="0"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="18" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="18" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="18" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="2" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                         To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator.Bullet>
                            <Grid ClipToBounds="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="20" Height="20">
                                <Grid x:Name="CheckHolder" Opacity="1" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.8,0.5"  Width="18" Height="18">
                                    <Border x:Name="NormalBorder" CornerRadius="1" Opacity="1" SnapsToDevicePixels="True" BorderBrush="{StaticResource CheckBox.Unchecked.Fill}" BorderThickness="2"/>
                                    <Border x:Name="CheckedBorder" Opacity="1" SnapsToDevicePixels="True" BorderBrush="{StaticResource CheckBox.Checked.Fill}" BorderThickness="0 0 2 2"/>
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UnderLineInput" TargetType="HeaderedContentControl">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <Border Padding="{TemplateBinding Padding}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentControl Content="{TemplateBinding Header}"/>
                            <ContentPresenter Grid.Column="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FixPlaceHolderTextBox" TargetType="TextBox" BasedOn="{StaticResource PlaceHolderTextBoxStyle}">
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style x:Key="MenuToggle" TargetType="ToggleButton">
        <Setter Property="Template" Value="{StaticResource BtnLiteTemplate}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid Background="Transparent">
                    <Rectangle Height="16" Width="3" Margin="10,8">
                        <Rectangle.Fill>
                            <DrawingBrush ViewboxUnits="Absolute" ViewportUnits="Absolute" Viewport="0,0,5,6" Viewbox="0,0,6,6" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing Brush="Black" Geometry="M 0 0 L 0 3 L 3 3 L3 0 z"/>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                        <Rectangle.CacheMode>
                            <BitmapCache SnapsToDevicePixels="True" />
                        </Rectangle.CacheMode>
                    </Rectangle>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="WindowsTenButtonTwoControlTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="root" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="root" Duration="0:0:0.1" To="1"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="root" Duration="0:0:0.1" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="root" Duration="0:0:0.1" To="0.98"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="root" Duration="0:0:0.1" To="0.98"/>
                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource Pressed.FontWeight}" />
                            </ObjectAnimationUsingKeyFrames>-->
                            <ColorAnimation Duration="0:0:0.05" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource Common.All9.Color}" />
                            <ColorAnimation Duration="0:0:0.05" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource Common.All9.Color}"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <ScaleTransform />
            </Grid.RenderTransform>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}" >
                <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <Rectangle x:Name="MouseOverBorder" Stroke="{StaticResource WindowsTenButton.MouseOver.Brush}" StrokeThickness="2" Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WinTenBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource NormalButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Template" Value="{StaticResource WindowsTenButtonTwoControlTemplate}" />
    </Style>


</ResourceDictionary>
