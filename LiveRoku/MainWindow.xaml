<Window x:Class="LiveRoku.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:LiveRoku.UI.converters"
        xmlns:controls="clr-namespace:LiveRoku.UI.controls"
        xmlns:local="clr-namespace:LiveRoku"
        mc:Ignorable="d"
        Icon="appicon.ico"
        Title="LiveRoku"
        MinHeight="430" MinWidth="300"
        Width="300" Height="430">
    <Window.Resources>
        <Style x:Key="NormalScrollItemsControlStyle" TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter>
                                </ItemsPresenter>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:BoolToVisibilityConverter x:Key="bool2visible" NotVisibleValue="Hidden" InvertVisibility="False"/>
        <converters:BoolToVisibilityConverter x:Key="bool2collapsed" NotVisibleValue="Collapsed" InvertVisibility="True"/>
        <converters:BoolSelectorConverter x:Key="bool2column" TrueValue="0" FalseValue="1"/>
        <converters:BoolSelectorConverter x:Key="bool2columnspan" TrueValue="2" FalseValue="1"/>
        <converters:BoolSelectorConverter x:Key="boolToStatusText" 
                                          TrueValue="{x:Static local:Constant.LiveOnText}" 
                                          FalseValue="{x:Static local:Constant.LiveOffText}"/>
        <local:ProcessStateToValueConverter x:Key="processToActionText"
                                          StoppedValue="{x:Static local:Constant.StartActionText}"
                                          PreparingValue="{x:Static local:Constant.PreparingActionText}"
                                          WaitingValue="{x:Static local:Constant.CancelWaitingActionText}" 
                                          StreamingValue="{x:Static local:Constant.StopActionText}"/>
        <local:ProcessStateToValueConverter x:Key="processToStatusText"
                                          StoppedValue="{x:Static local:Constant.RecordStopText}"
                                          PreparingValue="{x:Static local:Constant.RecordPreparingText}"
                                          WaitingValue="{x:Static local:Constant.RecordWaitingText}" 
                                          StreamingValue="{x:Static local:Constant.RecordingText}"/>
        <local:ProcessStateToValueConverter x:Key="processToSymbol"
                                          StoppedValue="{StaticResource {x:Static local:Constant.StopSymbolKey}}"
                                          PreparingValue="{StaticResource {x:Static local:Constant.StopSymbolKey}}"
                                          WaitingValue="{StaticResource {x:Static local:Constant.LoadingSymbolKey}}"
                                          StreamingValue="{StaticResource {x:Static local:Constant.RightSymbolKey}}"/>
    </Window.Resources>
    <Grid>
        <controls:DelayFitSizePane x:Name="root">
            <Grid Background="#FFF6F6F6">
                <ItemsControl Padding="12,0">
                    <!--Task control-->
                    <TextBlock Text="Task" Foreground="DimGray" FontSize="16" Margin="2,7,0,3"/>
                    <ContentControl MinHeight="200" Template="{StaticResource ShadowControl}"
                            Margin="0,4">
                        <Border>
                            <Grid>
                                <ItemsControl Padding="8" Focusable="False">
                                    <!-- PreferencesRoot -->
                                    <ItemsControl IsEnabled="{Binding IsPreferencesEditable}">
                                        <ItemsControl.Style>
                                            <Style TargetType="FrameworkElement">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.6" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                        <HeaderedContentControl Margin="7,0" Padding="0,10" Style="{StaticResource UnderLineInput}">
                                            <HeaderedContentControl.Header>
                                                <TextBlock FontSize="16" Margin="0,0,0,0"><Run Text="RoomId"/></TextBlock>
                                            </HeaderedContentControl.Header>
                                            <!--ShortRoomId-->
                                            <TextBox Text="{Binding ShortRoomId}" Padding="7,0,4,0" controls:PlaceHolder.Content="http://live.bilibili.com/{number}" Margin="0,4,0,0" Style="{StaticResource FixPlaceHolderTextBox}" />
                                        </HeaderedContentControl>
                                        <HeaderedContentControl Margin="7,0,7,7" Padding="0,10" Style="{StaticResource UnderLineInput}">
                                            <HeaderedContentControl.Header>
                                                <!--Attach save path label mouseleftdown event-->
                                                <TextBlock x:Name="savepathTextLabel" Text="Location" FontSize="16" Cursor="Hand"/>
                                            </HeaderedContentControl.Header>
                                            <Grid Margin="0,4,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <!--VideoFullPathFormat-->
                                                <TextBlock Text="{Binding VideoFullPathFormat}"
                                                               Padding="7,0,4,0" TextTrimming="CharacterEllipsis"
                                                               ToolTipService.InitialShowDelay="0"
                                                               ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                                                <!--Attach open save path configu button click event-->
                                                <Button x:Name="modifyLoationBtn" Grid.Column="1" Cursor="Hand" Template="{StaticResource BtnLiteTemplate}">
                                                    <Grid Margin="2,0" Background="Transparent">
                                                        <Path Data="M100,45 L100,85 A6,6 0 0 1 95,90 L5,90 A5,5 0 0 1 0,85 L0,5 A5,5 0 0 1 5,0 L55,0 M104,-4 L45,55" StrokeThickness="2" 
                                                                  Stroke="#3399ff" Stretch="Fill" 
                                                                  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round"
                                                                  ClipToBounds="True" Height="15" Width="15">
                                                            <Path.CacheMode>
                                                                <BitmapCache SnapsToDevicePixels="True" />
                                                            </Path.CacheMode>
                                                        </Path>
                                                    </Grid>
                                                </Button>
                                            </Grid>
                                        </HeaderedContentControl>
                                        <!--DanmakuRequire-->
                                        <CheckBox IsChecked="{Binding LocalDanmakuRequire, FallbackValue='true'}" Margin="6" Style="{StaticResource AnimatedCheckBox}">
                                            <TextBlock Text="save danmaku" Margin="10,0,0,0" Foreground="Gray"/>
                                        </CheckBox>
                                        <!--AutoStart-->
                                        <CheckBox IsChecked="{Binding AutoStart, FallbackValue='true'}" Margin="6" Style="{StaticResource AnimatedCheckBox}">
                                            <TextBlock Text="auto start on streaming" Margin="10,0,0,0" Foreground="Gray"/>
                                        </CheckBox>
                                        <!--Attach start button event-->
                                    </ItemsControl>
                                    <Button x:Name="startEndBtn01" Content="{Binding CurrentState, Converter={StaticResource processToActionText}, FallbackValue='Start'}" 
                                                IsEnabled="{Binding IsStateChangeable}"
                                                Style="{StaticResource BlueButtonStyle}" Height="40" Margin="4,7" FontSize="18"/>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </ContentControl>
                    <!--Status view-->
                    <TextBlock Text="{Binding IsLiveOn, Converter={StaticResource boolToStatusText}, StringFormat='State -- [{0}]', TargetNullValue='State',FallbackValue='State'}" Foreground="DimGray" FontSize="16" Margin="2,7,0,3"/>
                    <ContentControl Margin="0,8" Template="{StaticResource ShadowControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Expander Padding="4,0" Background="#ffe6cc" Style="{StaticResource SimpleAnimateExpanderStyle}" ExpandDirection="Up"
                                       IsExpanded="{Binding IsExpanded, ElementName=statusEx}">
                                <Expander.Header>
                                    <Grid Margin="30,0,0,0">
                                        <Rectangle Fill="#ffe6cc" Height="48"/>
                                        <!--ImaStatusText-->
                                        <Label Content="{Binding CurrentState, Converter={StaticResource processToStatusText}, FallbackValue='Stopped'}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Foreground="Gray"/>
                                        <ProgressBar x:Name="RecordStatusGroupBox" 
                                             BorderThickness="0"
                                             Height="1" VerticalAlignment="Top" IsIndeterminate="False"
                                             Visibility="{Binding IsIndeterminate, Converter={StaticResource bool2visible}, RelativeSource={RelativeSource Self}}"/>
                                    </Grid>
                                </Expander.Header>
                            </Expander>
                        </Grid>
                    </ContentControl>
                </ItemsControl>

                <!--Bottom tool-->
                <Label x:Name="aboutLinkLabel" Margin="12,6" Content="About LiveRoku" 
                           Foreground="#FF0066CC" HorizontalAlignment="Left" Height="25" VerticalAlignment="Bottom" Cursor="Hand"/>

                <Button Command="{x:Static controls:ExpendEx.ChangeExpandedCommand}"
                    CommandTarget="{Binding ElementName=pluginEx}"
                    Template="{StaticResource BtnLiteTemplate}"
                    Content="NotImplemented" Foreground="#FF0066CC"
                    Cursor="Hand"
                    HorizontalAlignment="Right" Margin="14,8"
                    Visibility="{Binding IsNarrow, ElementName=root,Converter={StaticResource bool2visible}}"
                    VerticalAlignment="Bottom"/>

                <!--Expend status info-->
                <controls:ExpendEx x:Name="statusEx" VerticalAlignment="Center">
                    <Grid Height="{Binding ActualHeight, ElementName=root}">
                        <ContentControl Margin="10,0" Template="{StaticResource ShadowControl}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="48"/>
                                </Grid.RowDefinitions>
                                <ItemsControl Padding="0,4">
                                    <ItemsControl.Resources>
                                        <Style x:Key="Header" TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="TextAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="4" />
                                            <Setter Property="Width" Value="90" />
                                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                        </Style>
                                        <Style x:Key="Content" TargetType="Label">
                                            <Setter Property="Padding" Value="0,4" />
                                            <Setter Property="Margin" Value="12,3,0,0" />
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="FontSize" Value="14" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                        <Style x:Key="ContentTb" TargetType="TextBlock">
                                            <Setter Property="Padding" Value="0,4" />
                                            <Setter Property="Margin" Value="13,3,0,0" />
                                            <Setter Property="Foreground" Value="Gray" />
                                            <Setter Property="FontSize" Value="14" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                        <Style TargetType="HeaderedContentControl">
                                            <Setter Property="Template" Value="{StaticResource HorizontalArrange}" />
                                            <Setter Property="Margin" Value="10,4" />
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </ItemsControl.Resources>
                                    <Button Command="{x:Static controls:ExpendEx.ChangeExpandedCommand}"
                                    CommandTarget="{Binding ElementName=statusEx}"
                                    Style="{StaticResource TransparentToGrayButtonStyle}" 
                                    Padding="10" Margin="0,0,0,16" HorizontalContentAlignment="Left">
                                        <StackPanel Orientation="Horizontal" Background="Transparent">
                                            <ContentControl ContentTemplate="{StaticResource BackArrow}" KeyboardNavigation.IsTabStop="False"/>
                                            <TextBlock Text="Status" Foreground="DimGray" FontSize="16" Margin="10,0"/>
                                        </StackPanel>
                                    </Button>
                                    <HeaderedContentControl >
                                        <HeaderedContentControl.Header>
                                            <Grid Width="90" Margin="4">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Subject" Width="auto" Margin="0" ToolTip="Show/Hide subject" MouseLeftButtonUp="hideTitleClick" >
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Header}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Cursor" Value="Hand" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <Button Grid.Column="1" Height="18" Width="18" Margin="4,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Click="updateTitleClick"
                                                            ToolTip="Fetch subject" SnapsToDevicePixels="True">
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource TransparentToGrayButtonStyle}">
                                                            <Setter Property="Cursor" Value="Hand" />
                                                        </Style>
                                                    </Button.Style>
                                                    <Path Data="M10,20 20,10 30,20 M20,35 20,10 M30,25 40,35 50,25 M40,10 40,30" Stroke="Black" StrokeThickness="1" Stretch="Fill" Height="12" Width="15">
                                                        <Path.CacheMode>
                                                            <BitmapCache SnapsToDevicePixels="True" EnableClearType="True"/>
                                                        </Path.CacheMode>
                                                    </Path>
                                                </Button>
                                            </Grid>
                                        </HeaderedContentControl.Header>
                                        <Grid>
                                            <TextBlock Style="{StaticResource ContentTb}" Text="NotImplemented"/>
                                            <!-- Title -->
                                            <TextBlock x:Name="titleView" Style="{StaticResource ContentTb}" Background="White" TextTrimming="CharacterEllipsis"
                                                           Text="{Binding CurrentRoomInfo.Title, FallbackValue='--------'}"
                                                           ToolTipService.InitialShowDelay="0" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                                        </Grid>
                                    </HeaderedContentControl>
                                    <Rectangle Style="{StaticResource Line}" />
                                    <HeaderedContentControl >
                                        <HeaderedContentControl.Header>
                                            <TextBlock Text="Time" Style="{StaticResource Header}"/>
                                        </HeaderedContentControl.Header>
                                        <!-- RecordTime -->
                                        <Label Content="{Binding Duration, TargetNullValue='00:00:00'}" Style="{StaticResource Content}"/>
                                    </HeaderedContentControl>
                                    <Rectangle Style="{StaticResource Line}" />
                                    <HeaderedContentControl >
                                        <HeaderedContentControl.Header>
                                            <TextBlock Text="Bit rate" Style="{StaticResource Header}"/>
                                        </HeaderedContentControl.Header>
                                        <!-- BitRate -->
                                        <Label Content="{Binding BitRate, TargetNullValue='0000.00 kbps'}" Style="{StaticResource Content}"/>
                                    </HeaderedContentControl>
                                    <Rectangle Style="{StaticResource Line}" />
                                    <HeaderedContentControl >
                                        <HeaderedContentControl.Header>
                                            <TextBlock Text="Size" Style="{StaticResource Header}"/>
                                        </HeaderedContentControl.Header>
                                        <!-- RecordSize -->
                                        <Label Content="{Binding ReceiveSize, TargetNullValue='0000.00 byte'}" Style="{StaticResource Content}"/>
                                    </HeaderedContentControl>
                                    <Rectangle Style="{StaticResource Line}" />
                                    <HeaderedContentControl >
                                        <HeaderedContentControl.Header>
                                            <TextBlock Text="Hot" Style="{StaticResource Header}"/>
                                        </HeaderedContentControl.Header>
                                        <!-- Poppularity -->
                                        <Label Content="{Binding Popularity}" Style="{StaticResource Content}"/>
                                    </HeaderedContentControl>
                                </ItemsControl>
                                <Rectangle x:Name="exploreArea" Grid.Row="1" Fill="#ffe6cc" Height="48" Cursor="Hand" ToolTip="Click to open location"/>
                                <TextBlock Grid.Row="1" Text="{Binding CurrentState, Converter={StaticResource processToStatusText}}" IsHitTestVisible="False"
                                               Style="{StaticResource AlignCenter}" FontSize="14" Foreground="Gray"/>
                                <Button x:Name="startEndBtn02" Height="48" Width="48" Background="#3bcca1" Style="{StaticResource ShadowCircleBtnStyle02}" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                            Margin="10,24" Grid.RowSpan="2" Foreground="White" 
                                            Content="{Binding CurrentState, Converter={StaticResource processToSymbol}}"
                                            IsEnabled="{Binding IsStateChangeable}">
                                </Button>
                            </Grid>
                        </ContentControl>
                    </Grid>
                </controls:ExpendEx>

                <!--Expend output info-->
                <controls:ExpendEx x:Name="pluginEx" VerticalAlignment="Center">
                    <ContentControl Margin="10,0" Template="{StaticResource ShadowControl}">
                        <Grid Height="{Binding ActualHeight, ElementName=root}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button Command="{x:Static controls:ExpendEx.ChangeExpandedCommand}"
                                    CommandTarget="{Binding ElementName=pluginEx}"
                                    Style="{StaticResource TransparentToGrayButtonStyle}" 
                                    Padding="10" HorizontalContentAlignment="Left">
                                <StackPanel Orientation="Horizontal" Background="Transparent">
                                    <ContentControl ContentTemplate="{StaticResource BackArrow}"/>
                                    <TextBlock Text="NotImplemented" Foreground="DimGray" FontSize="16" Margin="10,0"/>
                                </StackPanel>
                            </Button>

                            <ItemsControl Grid.Row="1"
                              VirtualizingPanel.ScrollUnit="Pixel"
                              VirtualizingPanel.IsVirtualizing="True" 
                              ScrollViewer.CanContentScroll="True" 
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              BorderThickness="0"
                              BorderBrush="LightGray"
                              Background="#FFF4F4F4"
                              Style="{StaticResource NormalScrollItemsControlStyle}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                         </Grid>
                    </ContentControl>
                </controls:ExpendEx>

            </Grid>
        </controls:DelayFitSizePane>
    </Grid>
</Window>
