<Window x:Class="LiveRoku.Notifications.FloatingBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LiveRoku.Notifications"
        xmlns:helpers="clr-namespace:LiveRoku.Notifications.helpers"
        Style="{DynamicResource EllipseWindowStyle}"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        mc:Ignorable="d"
        Title="FloatingBox"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="{x:Null}" Height="0" Width="0"
        AllowsTransparency="True">
    <Window.Resources>
        <Style x:Key="NormalPopupStyle" TargetType="Popup">
            <Setter Property="StaysOpen" Value="True"/>
            <Setter Property="AllowsTransparency" Value="True" />
        </Style>
        <Style x:Key="AlignCenter" TargetType="FrameworkElement">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <DataTemplate x:Key="BackArrow">
            <Path Data="M15,0 L25,10 15,20 M25,10 L0,10" Stroke="White" StrokeThickness="1.2" Stretch="Uniform" Height="15" Width="25">
                <Path.CacheMode>
                    <BitmapCache SnapsToDevicePixels="True" />
                </Path.CacheMode>
            </Path>
        </DataTemplate>
        <Color x:Key="Hover_d99903" A="255" R="217" G="153" B="3" />
        <Color x:Key="Press_e6a710" A="255" R="230" G="167" B="16" />
        <Color x:Key="Static_52575c" A="255" R="82" G="87" B="92" />
        <Color x:Key="Disable_waring" A="255" R="255" G="205" B="210" />
        <Color x:Key="Stroke.Color" A="10" R="10" G="10" B="10" />
        <Color x:Key="Canvas.Color" A="100" R="10" G="10" B="10" />
        <Color x:Key="Tranparent.Color" A="0" R="0" G="0" B="0" />
        <Color x:Key="Status.Yellow.Color" A="255" R="255" G="138" B="101" />
        <Color x:Key="Status.Blue.Color" A="223" R="3" G="169" B="244" />
        <SolidColorBrush x:Key="Stroke.Fill" Color="{StaticResource Stroke.Color}" />
        <SolidColorBrush x:Key="Static.Ellipse.Fill" Color="{StaticResource Static_52575c}" />
        <Style x:Key="EllipseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{StaticResource Static.Ellipse.Fill}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Height" Value="60" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" CornerRadius="60"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="ellipse"
                                                                    To="{StaticResource Static_52575c}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                                    To="{StaticResource Static_52575c}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="ellipse"
                                                                    To="{StaticResource Hover_d99903}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                                    To="{StaticResource Hover_d99903}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" >
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="ellipse"
                                                                    To="{StaticResource Press_e6a710}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                                    To="{StaticResource Press_e6a710}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" >
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="ellipse"
                                                                    To="{StaticResource Disable_waring}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                                    To="{StaticResource Disable_waring}" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Ellipse x:Name="ellipse" Fill="{StaticResource Static.Ellipse.Fill}" 
                                         Stroke="{StaticResource Stroke.Fill}" StrokeThickness="6"/>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RectangleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EllipseWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                CornerRadius="36">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaterialDesignToolToggleListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="14 6 14 6" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Normal"/>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                         To="0.1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Selected">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="*" To="SelectedUnfocused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Selected" To="Unselected">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Unselected"/>
                                    <VisualState Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <ContentPresenter/>
                                <Border x:Name="SelectedBorder" Visibility="Collapsed"/>
                                <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="Black"/>
                                <Border x:Name="SelectedBackgroundBorder"
                                    Opacity="0"
                                    Background="{DynamicResource MaterialDesignDivider}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="fadeMsg">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="msgText" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:0.25" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:0.5" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:1.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid>
        <!--<Popup x:Name="circle"
               Style="{StaticResource NormalPopupStyle}"
               Placement="Left">
            <Grid Width="60" Height="60">
                <Button x:Name="floattingBox"
                        HorizontalAlignment="Right"
                        PreviewMouseLeftButtonDown="onPreMouseLButtonDown"
                        PreviewMouseLeftButtonUp="onPreMouseLButtonUp" 
                        PreviewMouseRightButtonUp="onPreMouseRButtonUp"
                        PreviewMouseMove="onPreMouseMove" Foreground="AntiqueWhite"
                        Style="{StaticResource EllipseButtonStyle}">
                    <TextBlock x:Name="floatingBlock" Text="0000.&#x0a;00M" FontSize="11" TextAlignment="Center"/>
                </Button>
            </Grid>
        </Popup>-->
        <Popup x:Name="mybox" Style="{StaticResource NormalPopupStyle}"
               Placement="Left">
            <Grid Height="37" Width="85" SnapsToDevicePixels="True">
                <theme:SystemDropShadowChrome Color="#77777777" Style="{StaticResource AlignCenter}" Margin="0,0,4,4">
                    <Button x:Name="floattingBox" Height="32" Width="80" BorderThickness="5,0,0,0" BorderBrush="DeepSkyBlue" Background="#fafafa" SnapsToDevicePixels="True"
                        PreviewMouseLeftButtonDown="onPreMouseLButtonDown"
                        PreviewMouseLeftButtonUp="onPreMouseLButtonUp" 
                        PreviewMouseRightButtonUp="onPreMouseRButtonUp"
                        PreviewMouseMove="onPreMouseMove" Style="{StaticResource RectangleButtonStyle}">
                        <TextBlock x:Name="floatingBlock" Text="0000.00M" FontSize="14" Foreground="DarkSlateGray" TextAlignment="Center"/>
                    </Button>
                </theme:SystemDropShadowChrome>
                <Grid x:Name="statusTips" Visibility="Collapsed" IsHitTestVisible="False" Margin="0,0,3,3">
                    <Grid.Resources>
                        <Storyboard x:Key="repeatOpacity" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="statusTips" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0.7"/>
                                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:04" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="statusToBlue">
                            <ColorAnimation Storyboard.TargetName="statusFill" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{StaticResource Status.Blue.Color}" Duration="00:00:00"/>
                        </Storyboard>
                        <Storyboard x:Key="statusToYello">
                            <ColorAnimation Storyboard.TargetName="statusFill" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{StaticResource Status.Yellow.Color}" Duration="00:00:00" />
                        </Storyboard>
                    </Grid.Resources>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState x:Name="Blue">
                                <Storyboard>
                                    <StaticResource ResourceKey="statusToBlue"/>
                                    <StaticResource ResourceKey="repeatOpacity"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Yellow">
                                <Storyboard>
                                    <StaticResource ResourceKey="statusToYello"/>
                                    <StaticResource ResourceKey="repeatOpacity"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Rectangle x:Name="statusFill" Fill="Transparent" Stroke="Transparent"/>
                    <TextBlock x:Name="statusHole" Text="Notice" FontSize="12" TextAlignment="Center" Foreground="White"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
        </Popup>

        <Popup x:Name="popMsg" Style="{StaticResource NormalPopupStyle}" Placement="Left">
            <Grid Width="290" Height="38" MouseLeftButtonDown="dragPopMsgOnMouseLButtonDown">
                <Border x:Name="msgBox" Width="288" Height="36" HorizontalAlignment="Right" Margin="1">
                    <Border.Resources>
                        <DoubleAnimation x:Key="showMsgText" Storyboard.TargetName="msgText" Storyboard.TargetProperty="Opacity" BeginTime="00:00:0.2" Duration="00:00:0.25" From="0" To="1"/>
                        <DoubleAnimation x:Key="hideMsgText" Storyboard.TargetName="msgText" Storyboard.TargetProperty="Opacity" Duration="00:00:0.1" To="0"/>
                        <Storyboard x:Key="toExpand">
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="popMsg" Storyboard.TargetProperty="(helpers:PopupHelper.Visible)">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:0" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="msgBox" Storyboard.TargetProperty="Width"  Duration="00:00:0.2" To="288"/>
                            <DoubleAnimation Storyboard.TargetName="msgBox" Storyboard.TargetProperty="Opacity" Duration="00:00:00" To="1"/>
                            <StaticResource ResourceKey="showMsgText"/>
                        </Storyboard>
                        <Storyboard x:Key="toCollapsed">
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="popMsg" Storyboard.TargetProperty="(helpers:PopupHelper.Visible)">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:0.7" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="msgBox" Storyboard.TargetProperty="Width" Duration="00:00:0.2" To="36"/>
                            <DoubleAnimation Storyboard.TargetName="msgBox" Storyboard.TargetProperty="Opacity" BeginTime="00:00:0.2" Duration="00:00:0.5" To="0"/>
                            <StaticResource ResourceKey="hideMsgText"/>
                        </Storyboard>
                    </Border.Resources>
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <StopStoryboard BeginStoryboardName="hideBackBtn"/>
                            <BeginStoryboard x:Name="showBackBtn">
                                <Storyboard Storyboard.TargetName="backBtn">
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.2" To="1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <StopStoryboard BeginStoryboardName="showBackBtn"/>
                            <BeginStoryboard x:Name="hideBackBtn">
                                <Storyboard Storyboard.TargetName="backBtn">
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00" To="0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState x:Name="Expand" Storyboard="{StaticResource toExpand}"/>
                            <VisualState x:Name="Collapsed" Storyboard="{StaticResource toCollapsed}"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                        <Rectangle Fill="#BF2196F3" RadiusX="15" RadiusY="15">
                            <Rectangle.CacheMode>
                                <BitmapCache SnapsToDevicePixels="True" />
                            </Rectangle.CacheMode>
                        </Rectangle>
                        <Border Background="#5F2196F3" Margin="4,2" CornerRadius="30" Height="30" Width="30" HorizontalAlignment="Right">
                            <Viewbox Stretch="Uniform" VerticalAlignment="Center">
                                <TextBlock x:Name="msgCountText" Text="0" TextAlignment="Center" Foreground="#FFFFCDD2" TextTrimming="CharacterEllipsis"/>
                            </Viewbox>
                        </Border>
                        <Viewbox Margin="20,4" VerticalAlignment="Center" Stretch="Uniform" StretchDirection="DownOnly">
                            <TextBlock x:Name="msgText" Opacity="0" Width="248" Text="Example text" FontSize="16" Foreground="White" TextAlignment="Center"
                                            TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"/>
                        </Viewbox>
                        <Button x:Name="backBtn" Opacity="0.01" Height="30" Width="30" Margin="2" HorizontalAlignment="Left" Click="backBtnClick">
                            <Button.Background>
                                <VisualBrush Stretch="None">
                                    <VisualBrush.Visual>
                                        <Canvas>
                                            <Ellipse Fill="#af000000" Height="30" Width="30"/>
                                            <ContentControl Height="30" Width="30" ContentTemplate="{StaticResource BackArrow}"/>
                                        </Canvas>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Button.Background>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.CacheMode>
                                <BitmapCache SnapsToDevicePixels="True" />
                            </Button.CacheMode>
                        </Button>
                    </Grid>
                </Border>
            </Grid>
        </Popup>
        <!--detach-->
        <!--<Popup IsOpen="False" StaysOpen="True" AllowsTransparency="True" Placement="Left" PopupAnimation="Fade">
            <ItemsControl x:Name="toastHost" IsHitTestVisible="False">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="1" CornerRadius="2" Background="#5f000000" MinWidth="200" MaxWidth="400">
                            <TextBlock FontSize="14" Padding="12,7" TextTrimming="CharacterEllipsis" 
                                       TextWrapping="WrapWithOverflow"
                                       ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"
                                       Text="{Binding Text, FallbackValue='Load fail.'}" Foreground="White"/>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Popup>-->
    </Grid>
</Window>
